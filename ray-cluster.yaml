# Exemplo de configuração de um RayCluster
apiVersion: ray.io/v1
kind: RayCluster
metadata:
  name: kuberay-cluster
  namespace: ray
spec:
  rayVersion: '2.39.0'
  enableInTreeAutoscaling: true
  autoscalerOptions:
    upscalingMode: Aggressive
    idleTimeoutSeconds: 60
    imagePullPolicy: IfNotPresent
    securityContext: {}
    env: []
    envFrom: []
    resources:
      limits:
        cpu: "500m"
        memory: "512Mi"
      requests:
        cpu: "500m"
        memory: "512Mi"
  headGroupSpec:
    rayStartParams:
      num-cpus: "0"
    template:
      spec:
        containers:
          - name: ray-head
            image: rayproject/ray:2.39.0
            ports:
            - containerPort: 6379
              name: gcs
            - containerPort: 8265
              name: dashboard
            - containerPort: 10001
              name: client
            - containerPort: 8000
              name: serve
            lifecycle:
              preStop:
                exec:
                  command: ["/bin/sh","-c","ray stop"]
            resources:
              limits:
                cpu: "1"
                memory: "2G"
              requests:
                cpu: "1"
                memory: "2G"
  workerGroupSpecs:
  - replicas: 0
    minReplicas: 0
    maxReplicas: 10
    groupName: small-group
    rayStartParams: {}
    template:
      spec:
        tolerations:
        - key: "sistema"
          operator: "Equal"
          value: "processamento"
          effect: "NoSchedule"
        containers:
        - name: ray-worker
          image: rayproject/ray:2.39.0
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","ray stop"]
          resources:
            limits:
              cpu: "1"
              memory: "1G"
            requests:
              cpu: "1"
              memory: "1G"
